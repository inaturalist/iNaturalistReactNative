##
# Run e2e tests
##
name: e2e-iOS
on:
  workflow_dispatch:
  # pull_request:
  push:
    branches:
      - 'MOB-942-split-e2e-build-and-run'

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true
  
jobs:
  checksecret:
    name: check for oauth client
    runs-on: macos-15
    outputs:
      is_SECRETS_PRESENT_set: ${{ steps.checksecret_job.outputs.is_SECRETS_PRESENT_set }}
    steps:
      - name: Check whether unity activation requests should be done
        id: checksecret_job
        env:
            SECRETS_PRESENT: ${{ secrets.OAUTH_CLIENT_SECRET }}
        run: |
            echo "is_SECRETS_PRESENT_set: ${{ env.SECRETS_PRESENT != '' }}"
            echo "::set-output name=is_SECRETS_PRESENT_set::${{ env.SECRETS_PRESENT != '' }}"

  build:
    needs: checksecret
    if: needs.checksecret.outputs.is_SECRETS_PRESENT_set == 'true'
    runs-on: macos-15-large
    # Kill the task if not finished after 120 minutes
    timeout-minutes: 120

    steps:
    - name: Check out Git repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 1

    - name: Install Node.js, NPM and Yarn
      uses: actions/setup-node@v4
      with:
        node-version: 22

    - name: Setup Ruby version according to .ruby-version with cached gems
      uses: ruby/setup-ruby@v1
      with:
        bundler-cache: true        

    - name: Cache node modules
      uses: actions/cache@v4
      id: cache
      with:
        path: node_modules
        key: node-modules-${{ hashFiles('**/package-lock.json') }}

    - name: Rebuild detox from cache
      if: steps.cache.outputs.cache-hit == 'true'
      run: npx detox clean-framework-cache && npx detox build-framework-cache

    # supposedly our current cache includes native modules like Realm
    # that have compiled binaries specific to the environment where they were installed
    # which might not be the same as the github actions environment
    # so we need to rebuild them
    - name: Rebuild native modules
      if: steps.cache.outputs.cache-hit == 'true'
      run: npm rebuild

    - name: Install Dependencies
      if: steps.cache.outputs.cache-hit != 'true'
      run: npm install

    - name: Cache Pods
      uses: actions/cache@v4
      id: podcache
      with:
        path: ios/Pods
        key: pods-${{ hashFiles('**/Podfile.lock') }}

    - name: Update Pods
      run: |
        gem update cocoapods xcodeproj
        cd ios && pod install && cd ..

    # Download all linked model files not included in the repository (otherwise build will error out), requires .env file
    - name: Download the example cv model and taxonomy file into the ios folder
      run: npm run add-example-model

    - name: Populate build secrets
      uses: ./.github/actions/provide-build-secrets-action

    # https://docs.github.com/en/actions/using-workflows/workflow-commands-for-github-actions#setting-an-environment-variable
    # This will be available for all subsequent steps
    - name: Set MOCK_MODE to e2e
      run: echo "MOCK_MODE=e2e" >> "$GITHUB_ENV"

    - name: Build test app
      run: npm run e2e:build:ios

    - name: Debugging
      run: |
        echo $GITHUB_WORKSPACE
        ls -l $GITHUB_WORKSPACE
        ls -l $GITHUB_WORKSPACE/ios/build/Build/Products/Release-iphonesimulator
        ls -l $GITHUB_WORKSPACE/ios/build/Build/Products/Release-iphonesimulator/iNaturalistReactNative.app

    - name: Create temp file in workspace root
      run: touch empty.txt

    - name: Upload iOS Detox app build
      uses: actions/upload-artifact@v4
      with:
        name: detox_app
        path: |
          empty.txt
          ios/build/Build/Products/Release-iphonesimulator/iNaturalistReactNative.app

  test:
    needs: build
    runs-on: macos-15-large
    # Kill the task if not finished after 120 minutes
    timeout-minutes: 120

    steps:

    - name: Check out Git repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 1

    - name: Download iOS Detox app build
      uses: actions/download-artifact@v5
      with:
        name: detox_app

    - name: Debugging
      run: |
        ls -l $GITHUB_WORKSPACE/ios/build/Build/Products/Release-iphonesimulator

    - name: Install Node.js, NPM and Yarn
      uses: actions/setup-node@v4
      with:
        node-version: 22

    - name: Cache node modules
      uses: actions/cache@v4
      id: cache
      with:
        path: node_modules
        key: node-modules-${{ hashFiles('**/package-lock.json') }}

    - name: Rebuild detox from cache
      if: steps.cache.outputs.cache-hit == 'true'
      run: npx detox clean-framework-cache && npx detox build-framework-cache

    # supposedly our current cache includes native modules like Realm
    # that have compiled binaries specific to the environment where they were installed
    # which might not be the same as the github actions environment
    # so we need to rebuild them
    - name: Rebuild native modules
      if: steps.cache.outputs.cache-hit == 'true'
      run: npm rebuild

    - name: Install Dependencies
      if: steps.cache.outputs.cache-hit != 'true'
      run: npm install

    # https://docs.github.com/en/actions/using-workflows/workflow-commands-for-github-actions#setting-an-environment-variable
    # This will be available for all subsequent steps
    - name: Set MOCK_MODE to e2e
      run: echo "MOCK_MODE=e2e" >> "$GITHUB_ENV"

    - name: Populate build secrets
      uses: ./.github/actions/provide-build-secrets-action

    # Install prerequisites for detox and build app, and test
    - name: Install macOS dependencies
      env:
        HOMEBREW_NO_AUTO_UPDATE: 1
        HOMEBREW_NO_INSTALL_CLEANUP: 1
      run: |
        brew tap wix/brew
        brew install applesimutils

    - name: Ensure servers are running
      run: |
        # is rails running?
        curl -I --fail "https://staging.inaturalist.org/ping"
        # is node running & is ES working?
        curl -I --fail "https://stagingapi.inaturalist.org/v2/taxa"

    - name: Run e2e test
      run: npm run e2e:test:ios -- --cleanup --take-screenshots failing --record-videos failing --record-logs all -l trace
    
    # The artifacts for the failing tests are available for download on github.com on the page of the individual actions run
    - name: Store Detox artifacts on test failure
      uses: actions/upload-artifact@v4
      if: failure()
      with:
        name: detox-artifacts
        path: artifacts

  # notify:
  #   name: Notify Slack
  #   needs: test
  #   if: ${{ success() || failure() }}
  #   runs-on: macos-14
  #   steps:
  #     - uses: iRoachie/slack-github-actions@v2.3.0
  #       if: env.SLACK_WEBHOOK_URL != null
  #       env:
  #         SLACK_WEBHOOK_URL: ${{ secrets.SLACK_BUILDS_WEBHOOK_URL }}
  #         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}