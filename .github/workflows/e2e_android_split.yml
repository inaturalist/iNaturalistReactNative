name: e2e-Android-split
on:
  workflow_dispatch:
  push:
    branches:
      - 'android-detox'

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  # cancel-in-progress: true
    
jobs:
  build:
    # using intel image, android emu currently can't run on Apple Silicon
    # https://github.com/ReactiveCircus/android-emulator-runner/issues/350#issuecomment-3349718997
    runs-on: macos-15-intel

    steps:

    - name: Check out Git repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 1

    # - name: Cache node modules
    #   uses: actions/cache@v4
    #   id: cache
    #   with:
    #     path: node_modules
    #     key: node-modules-${{ hashFiles('**/package-lock.json') }}
  
    # - name: Rebuild detox from cache
    #   if: steps.cache.outputs.cache-hit == 'true'
    #   # Currently, (Detox 20) those two commands are macOS only
    #   run: npx detox clean-framework-cache && npx detox build-framework-cache

    # # supposedly our current cache includes native modules like Realm
    # # that have compiled binaries specific to the environment where they were installed
    # # which might not be the same as the github actions environment
    # # so we need to rebuild them
    # - name: Rebuild native modules
    #   if: steps.cache.outputs.cache-hit == 'true'
    #   run: npm rebuild

    # - name: Install Dependencies
    #   if: steps.cache.outputs.cache-hit != 'true'
    #   run: npm install

    # # Generate the secret files needed for a release build
    # - name: Create .env file
    #   env:
    #     OAUTH_CLIENT_ID: ${{ secrets.OAUTH_CLIENT_ID }}
    #     OAUTH_CLIENT_SECRET: ${{ secrets.OAUTH_CLIENT_SECRET }}
    #     E2E_TEST_USERNAME: ${{ secrets.E2E_TEST_USERNAME }}
    #     E2E_TEST_PASSWORD: ${{ secrets.E2E_TEST_PASSWORD }}
    #     JWT_ANONYMOUS_API_SECRET: ${{ secrets.JWT_ANONYMOUS_API_SECRET }}
    #     GMAPS_API_KEY: ${{ secrets.GMAPS_API_KEY }}
    #   run: printf 'API_URL=https://stagingapi.inaturalist.org/v2\nOAUTH_API_URL=https://staging.inaturalist.org\nJWT_ANONYMOUS_API_SECRET=%s\nOAUTH_CLIENT_ID=%s\nOAUTH_CLIENT_SECRET=%s\nE2E_TEST_USERNAME=%s\nE2E_TEST_PASSWORD=%s\nGMAPS_API_KEY=%s\nANDROID_MODEL_FILE_NAME=INatVision_Small_2_fact256_8bit.tflite\nANDROID_TAXONOMY_FILE_NAME=taxonomy.csv\nANDROID_GEOMODEL_FILE_NAME=INatGeomodel_Small_2_8bit.tflite\nIOS_MODEL_FILE_NAME=INatVision_Small_2_fact256_8bit.mlmodel\nIOS_TAXONOMY_FILE_NAME=taxonomy.json\nIOS_GEOMODEL_FILE_NAME=INatGeomodel_Small_2_8bit.mlmodel\nCV_MODEL_VERSION=small_2\n' "$JWT_ANONYMOUS_API_SECRET" "$OAUTH_CLIENT_ID" "$OAUTH_CLIENT_SECRET" "$E2E_TEST_USERNAME" "$E2E_TEST_PASSWORD" "$GMAPS_API_KEY" > .env
    # - name: Create keystore.properties file
    #   env:
    #     ANDROID_KEY_STORE_PASSWORD: ${{ secrets.ANDROID_KEY_STORE_PASSWORD }}
    #     ANDROID_KEY_PASSWORD: ${{ secrets.ANDROID_KEY_PASSWORD }}
    #     ANDROID_ALIAS: ${{ secrets.ANDROID_ALIAS }}
    #   run: printf 'storePassword=%s\nkeyPassword=%s\nkeyAlias=%s\nstoreFile=release.keystore' "$ANDROID_KEY_STORE_PASSWORD" "$ANDROID_KEY_PASSWORD" "$ANDROID_ALIAS" > android/keystore.properties
    # - name: Generate release keystore
    #   env:
    #     ANDROID_ALIAS: ${{ secrets.ANDROID_ALIAS }}
    #     ANDROID_KEY_STORE_PASSWORD: ${{ secrets.ANDROID_KEY_STORE_PASSWORD }}
    #     ANDROID_KEY_PASSWORD: ${{ secrets.ANDROID_KEY_PASSWORD }}
    #   run: |
    #     keytool -genkeypair -v -noprompt -storetype PKCS12 -keystore release.keystore -alias "$ANDROID_ALIAS" -keyalg RSA -keysize 2048 -validity 10000 -storepass "$ANDROID_KEY_STORE_PASSWORD" -keypass "$ANDROID_KEY_PASSWORD" -dname "CN=mqttserver.ibm.com, OU=ID, O=IBM, L=Hursley, S=Hants, C=GB"
    # - name: Move keystore
    #   run: mv release.keystore android/app/release.keystore

    # # Download the example model otherwise an error alert will be shown on app start, requires .env
    # - name: Download the small example cv and geomodel
    #   run: npm run add-example-model -- -f=main

    # - name: Build for detox
    #   run: npm run e2e:build:android

    # - name: Debugging
    #   run: |
    #     ls -l
    #     ls -Rl android/app/build/outputs

    # - name: Upload app apk
    #   uses: actions/upload-artifact@v4
    #   with:
    #     name: app-apk
    #     path: android/app/build/outputs/apk/release/org.inaturalist.iNaturalistMobile-release.apk

    # - name: Upload test apk
    #   uses: actions/upload-artifact@v4
    #   with:
    #     name: test-apk
    #     path: android/app/build/outputs/apk/androidTest/release/org.inaturalist.iNaturalistMobile-release-androidTest.apk

    # trying to keep things simple for the next step to avoid any red herrings from the repo itself
    #
    # we _at least_ need the detox config
    - name: Upload detox config
      uses: actions/upload-artifact@v4
      with:
        name: detox-config
        include-hidden-files: true
        path: .detoxrc.js
    # and the e2e dir
    # - name: Upload e2e directory
    #   uses: actions/upload-artifact@v4
    #   with:
    #     name: e2e-directory
    #     path: e2e

    - name: Mock apks for artifact share test
      run: |
        touch android/app/build/outputs/apk/release/org.inaturalist.iNaturalistMobile-release.apk
        touch android/app/build/outputs/apk/androidTest/release/org.inaturalist.iNaturalistMobile-release-androidTest.apk

    # I think this _should_ put e2e in root and android in root, maintaining repo structure (least common root)
    - name: Upload e2e & apks
      uses: actions/upload-artifact@v4
      with:
        name: test-files
        path: |
          e2e
          android/app/build/outputs/apk/release/org.inaturalist.iNaturalistMobile-release.apk
          android/app/build/outputs/apk/androidTest/release/org.inaturalist.iNaturalistMobile-release-androidTest.apk

  test:
    needs: build
    # using intel image, android emu currently can't run on Apple Silicon
    # https://github.com/ReactiveCircus/android-emulator-runner/issues/350#issuecomment-3349718997
    runs-on: macos-15-intel

    steps:
    # - name: Check out Git repository
    #   uses: actions/checkout@v4
    #   with:
    #     fetch-depth: 1

    # - name: Install Dependencies
    #   run: npm install



    - name: Debugging
      run: |
        ls -la

    # - name: Download app apk
    #   uses: actions/download-artifact@v5
    #   with:
    #     name: app-apk
    #     path: android/app/build/outputs/apk/release/org.inaturalist.iNaturalistMobile-release.apk

    # - name: Download test apk
    #   uses: actions/download-artifact@v5
    #   with:
    #     name: test-apk
    #     path: android/app/build/outputs/apk/androidTest/release/org.inaturalist.iNaturalistMobile-release-androidTest.apk

    - name: Download detox config
      uses: actions/download-artifact@v5
      with:
        name: detox-config

    - name: Download test files
      uses: actions/download-artifact@v5
      with:
        name: test-files

    - name: Debugging
      run: |
        ls -Rla

    - name: Install jest & detox
      run: npm install jest detox@20.41.1

    # Use the Android command line tools to download an AOSP emulator image, and setup new avd
    # x86_64 OR arm64-v8a <- intel vs M#
    - name: Download Android Emulator Image
      run: |
        echo "y" | $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager --install "system-images;android-31;default;x86_64"
        echo "no" | $ANDROID_HOME/cmdline-tools/latest/bin/avdmanager create avd -n Pixel_5_API_31_AOSP -d pixel --package 'system-images;android-31;default;x86_64'
        $ANDROID_HOME/emulator/emulator -list-avds

    # Starts the avd previously set-up by name
    - name: Android Emulator
      timeout-minutes: 10
      continue-on-error: true
      run: |
        echo "Starting emulator"
        nohup $ANDROID_HOME/emulator/emulator -avd Pixel_5_API_31_AOSP -no-audio -no-snapshot -no-window -no-boot-anim -timezone America/Los_Angeles &
        $ANDROID_HOME/platform-tools/adb wait-for-device shell 'while [[ -z $(getprop sys.boot_completed | tr -d '\r') ]]; do sleep 1; done; input keyevent 82'
        $ANDROID_HOME/platform-tools/adb devices
        $ANDROID_HOME/platform-tools/adb emu geo fix -121.45356 46.51119 4392 12
        echo "Emulator started"

    - name: Ensure servers are running
      run: |
        # is rails running?
        curl -I --fail "https://staging.inaturalist.org/ping"
        # is node running & is ES working?
        curl -I --fail "https://stagingapi.inaturalist.org/v2/taxa"

    # Start the Android e2e tests with extensive logging and screen captures for failing tests
    - name: Android Detox
      run: MOCK_MODE=e2e npx detox@20.41.1 test --configuration android.release --take-screenshots failing --record-videos failing -l debug

    # The artifacts for the failing tests are available for download on github.com on the page of the individual actions run
    - name: Store Detox artifacts on test failure
      uses: actions/upload-artifact@v4
      if: failure()
      with:
        name: detox-artifacts
        path: artifacts

  # notify:
  #   name: Notify Slack
  #   needs: test
  #   if: ${{ success() || failure() }}
  #   runs-on: macos-latest
  #   steps:
  #     - uses: iRoachie/slack-github-actions@v2.3.0
  #       if: env.SLACK_WEBHOOK_URL != null
  #       env:
  #         SLACK_WEBHOOK_URL: ${{ secrets.SLACK_BUILDS_WEBHOOK_URL }}
  #         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
