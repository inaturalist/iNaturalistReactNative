// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`UploadStatus displays complete icon when progress is 1 1`] = `
<View
  accessibilityLabel="Upload Complete"
  accessible={true}
  style={
    [
      [
        {
          "justifyContent": "center",
        },
        {
          "height": 65,
        },
      ],
    ]
  }
>
  <View
    style={
      [
        [
          {
            "position": "absolute",
          },
          {
            "height": "100%",
          },
          {
            "justifyContent": "center",
          },
        ],
      ]
    }
  >
    <View
      style={
        [
          [
            {
              "width": 44,
            },
          ],
        ]
      }
    >
      <View
        collapsable={false}
        entering={
          InnerKeyframe {
            "build": [Function],
            "callbackV": undefined,
            "definitions": {
              "0": {
                "opacity": 0,
              },
              "100": {
                "opacity": 0,
              },
              "40": {
                "opacity": 1,
              },
            },
            "delayV": undefined,
            "durationV": 2000,
            "reduceMotionV": "system",
          }
        }
        jestAnimatedStyle={
          {
            "value": {},
          }
        }
        testID="UploadIcon.complete.undefined"
      >
        <View
          style={
            [
              [
                {
                  "alignItems": "center",
                },
                {
                  "justifyContent": "center",
                },
                {
                  "width": 44,
                },
                {
                  "height": 44,
                },
              ],
            ]
          }
          testID="UploadStatus.Complete"
        >
          <Text
            allowFontScaling={false}
            selectable={false}
            style={
              [
                {
                  "color": "#74AC00",
                  "fontSize": 28,
                },
                null,
                {
                  "fontFamily": "INatIcon",
                  "fontStyle": "normal",
                  "fontWeight": "normal",
                },
                {},
              ]
            }
          >
            
          </Text>
        </View>
      </View>
    </View>
  </View>
  <View
    collapsable={false}
    entering={
      FadeIn {
        "build": [Function],
        "callbackV": undefined,
        "dampingRatioV": undefined,
        "dampingV": undefined,
        "delayV": 2000,
        "durationV": 1000,
        "easingV": undefined,
        "initialValues": undefined,
        "massV": undefined,
        "overshootClampingV": undefined,
        "randomizeDelay": false,
        "reduceMotionV": "system",
        "restDisplacementThresholdV": undefined,
        "restSpeedThresholdV": undefined,
        "rotateV": undefined,
        "stiffnessV": undefined,
        "type": undefined,
      }
    }
    jestAnimatedStyle={
      {
        "value": {},
      }
    }
  />
</View>
`;

exports[`UploadStatus displays progress bar when progress is greater than 5% 1`] = `
<View
  accessibilityLabel="Upload 50 percent complete"
  accessible={true}
  style={
    [
      [
        {
          "justifyContent": "center",
        },
        {
          "height": 65,
        },
      ],
    ]
  }
>
  <View
    style={
      [
        [
          {
            "width": 44,
          },
        ],
      ]
    }
  >
    <View
      accessibilityLabel="Upload in progress"
      style={
        [
          [
            {
              "alignItems": "center",
            },
            {
              "justifyContent": "center",
            },
            {
              "width": 44,
            },
            {
              "height": 44,
            },
            {
              "justifyContent": "center",
            },
            {
              "alignItems": "center",
            },
          ],
        ]
      }
      testID="UploadIcon.progress.undefined"
    >
      <View
        style={
          [
            [
              {
                "position": "absolute",
              },
            ],
          ]
        }
      >
        <Text
          allowFontScaling={false}
          selectable={false}
          style={
            [
              {
                "color": "#454545",
                "fontSize": 15,
              },
              null,
              {
                "fontFamily": "INatIcon",
                "fontStyle": "normal",
                "fontWeight": "normal",
              },
              {},
            ]
          }
        >
          
        </Text>
      </View>
      <CircularProgress
        activeStrokeColor="#454545"
        activeStrokeWidth={2.5}
        inActiveStrokeOpacity={0}
        maxValue={1}
        radius={18}
        showProgressValue={false}
        testID="UploadStatus.CircularProgress"
        value={0.5}
      />
    </View>
  </View>
</View>
`;

exports[`UploadStatus displays rotating circle progress when upload is queued but not started 1`] = `
<View
  accessibilityLabel="Saved observation, in queue to upload"
  accessible={true}
  style={
    [
      [
        {
          "justifyContent": "center",
        },
        {
          "height": 65,
        },
      ],
    ]
  }
>
  <View
    style={
      [
        [
          {
            "width": 44,
          },
        ],
      ]
    }
  >
    <View
      style={
        [
          [
            {
              "justifyContent": "center",
            },
            {
              "alignItems": "center",
            },
          ],
        ]
      }
    >
      <View
        style={
          [
            [
              {
                "position": "absolute",
              },
            ],
          ]
        }
      >
        <Text
          allowFontScaling={false}
          selectable={false}
          style={
            [
              {
                "color": "#454545",
                "fontSize": 15,
              },
              null,
              {
                "fontFamily": "INatIcon",
                "fontStyle": "normal",
                "fontWeight": "normal",
              },
              {},
            ]
          }
        >
          
        </Text>
      </View>
      <View
        collapsable={false}
        jestAnimatedStyle={
          {
            "value": {
              "transform": [
                {
                  "rotateZ": "0deg",
                },
              ],
            },
          }
        }
        style={
          [
            {
              "transform": [
                {
                  "rotateZ": "0deg",
                },
              ],
            },
          ]
        }
        testID="UploadStatus.QueuedRotatingIcon"
      >
        <Text
          allowFontScaling={false}
          selectable={false}
          style={
            [
              {
                "color": "#454545",
                "fontSize": 33,
              },
              null,
              {
                "fontFamily": "INatIcon",
                "fontStyle": "normal",
                "fontWeight": "normal",
              },
              {},
            ]
          }
        >
          
        </Text>
      </View>
    </View>
  </View>
</View>
`;

exports[`UploadStatus displays start icon when upload is unsynced and not queued 1`] = `
<View
  accessibilityLabel="Saved observation, in queue to upload"
  accessible={true}
  style={
    [
      [
        {
          "justifyContent": "center",
        },
        {
          "height": 65,
        },
      ],
    ]
  }
>
  <View
    style={
      [
        [
          {
            "width": 44,
          },
        ],
      ]
    }
  >
    <View
      accessibilityLabel="Start upload"
      accessibilityRole="button"
      accessibilityState={
        {
          "busy": undefined,
          "checked": undefined,
          "disabled": false,
          "expanded": undefined,
          "selected": undefined,
        }
      }
      accessibilityValue={
        {
          "max": undefined,
          "min": undefined,
          "now": undefined,
          "text": undefined,
        }
      }
      accessible={true}
      collapsable={false}
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        [
          {
            "height": 44,
            "width": 44,
          },
          {
            "alignItems": "center",
            "justifyContent": "center",
          },
          false,
          undefined,
          {
            "opacity": 1,
          },
        ]
      }
      testID="UploadIcon.start.undefined"
    >
      <View
        style={
          [
            [
              {
                "position": "relative",
              },
              {
                "left": 0.2,
              },
              {
                "top": 0.1,
              },
            ],
          ]
        }
      >
        <View
          style={
            [
              [
                {
                  "justifyContent": "center",
                },
                {
                  "alignItems": "center",
                },
              ],
            ]
          }
        >
          <View
            style={
              [
                [
                  {
                    "position": "absolute",
                  },
                ],
              ]
            }
          >
            <Text
              allowFontScaling={false}
              selectable={false}
              style={
                [
                  {
                    "color": "#454545",
                    "fontSize": 15,
                  },
                  null,
                  {
                    "fontFamily": "INatIcon",
                    "fontStyle": "normal",
                    "fontWeight": "normal",
                  },
                  {},
                ]
              }
            >
              
            </Text>
          </View>
          <View
            collapsable={false}
            jestAnimatedStyle={
              {
                "value": {
                  "transform": [
                    {
                      "rotateZ": "0deg",
                    },
                  ],
                },
              }
            }
            style={
              [
                {
                  "transform": [
                    {
                      "rotateZ": "0deg",
                    },
                  ],
                },
              ]
            }
            testID="UploadStatus.QueuedRotatingIcon"
          >
            <Text
              allowFontScaling={false}
              selectable={false}
              style={
                [
                  {
                    "color": "#454545",
                    "fontSize": 33,
                  },
                  null,
                  {
                    "fontFamily": "INatIcon",
                    "fontStyle": "normal",
                    "fontWeight": "normal",
                  },
                  {},
                ]
              }
            >
              
            </Text>
          </View>
        </View>
      </View>
    </View>
  </View>
</View>
`;
